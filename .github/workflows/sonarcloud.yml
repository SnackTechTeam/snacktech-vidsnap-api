name: SonarQube
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    runs-on: windows-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
            dotnet-version: 8.0.x

        # Define a variavel de sessÃ£o para o arquivo da solution
      - name: Set Solution Path
        id: set_solution_path
        run: |
            # Informar aqui o caminho para o arquivo da solution
            SOLUTION_PATH="./SnackTech.Vidsnap.sln"
            echo "SOLUTION_PATH=$SOLUTION_PATH" >> $GITHUB_ENV

      - name: Restore dependencies
        run: dotnet restore $SOLUTION_PATH

      - name: Build
        run: dotnet build $SOLUTION_PATH --configuration Release

      - name: Test
        run: dotnet test $SOLUTION_PATH --configuration Release --collect:"XPlat Code Coverage" --logger:"trx;LogFileName=../TestResults.trx"

    #   - name: Install ReportGenerator and dotnet-coverage
    #     run: |
    #         dotnet tool install -g dotnet-reportgenerator-globaltool
    #         dotnet tool install -g dotnet-coverage
        
    #   - name: Merge Test Results
    #     run: |
    #         dotnet-coverage merge *.cobertura.xml --recursive --output merged.cobertura.xml --output-format cobertura

    #   - name: Generate Coverage Report
    #     run: reportgenerator -reports:./**/merged.cobertura.xml -targetdir:./CoverageReport -reporttypes:Html
        
      - name: Cache SonarQube Cloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarQube Cloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarQube Cloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"SnackTechTeam_snacktech-vidsnap-api" /o:"snacktechteam" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"